# {{ ansible_managed }}

{% if bind_tsig is defined %}
# tsig keys
{% for zone, value in bind_tsig.items() %}
## {{ zone }}
{% for key in value %}
key "{{ key.name }}" {
  algorithm {{ key.algorithm }};
  secret "{{ key.tsig_key }}";
};
{% endfor %}
{% endfor %}
{% endif %}

# zones
{% for zone, value in bind_zones.items() %}
{% if 'state' not in value or value.state|lower not in ['disabled', 'absent'] %}

zone "{{ zone }}" IN {
  type master;
{% if zone in bind_dnssec %}
  file "/etc/bind/zones/{{ zone }}/db.signed";
  key-directory "/etc/bind/keys";
{% else %}
  file "/etc/bind/zones/{{ zone }}/db";
{% endif %}
  allow-transfer {
{% if 'allow_transfer' in value %}
{% for ip in value.allow_transfer %}
    {{ ip }};
{% endfor %}
{% else %}
    "none";
{% endif %}
  };

{% if bind_tsig is defined %}
{% if zone in bind_tsig or bing_tsig.all is defined %}
  update-policy {
{% for elem in bind_tsig.items() %}
{% if elem.0 == "all" or elem.0 == zone %}
{% for key in elem.1 %}
{% if key.certbot == 1 %}{# Pr√©voir update-policy-custom #}
    grant {{ key.name }} name _acme-challenge.{{ zone }}. txt;
{% endif %}
{% endfor %}
{% endif %}
{% endfor %}
  };
{% endif %}
{% endif %}

{% if 'options' in value %}
{% for option,  opt_value in value.options.items() %}
  {{ option }} {% if opt_value == True %}yes{% elif opt_value == False %}no{% else %}{{ opt_value }}{% endif %};
{% endfor %}
{% endif %}
};
{% endif %}
{% endfor %}
