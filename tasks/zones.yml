---
- name: set fact bind_views_play if it empty
  set_fact:
    bind_views_play: '{{ bind_views_play|default([]) + [ item ] }}'
  loop: '{{ bind_views | dict2items }}'
  loop_control:
    label: '{{ item.key }}'

- name: create views folder
  file:
    path: '/etc/bind/zones/{{ item.0.key }}/{{ item.1|first }}'
    owner: bind
    group: bind
    mode: 0755
    state: directory
  loop_control:
    label: '{{ item.0.key + "/" + item.1|first }}'
  with_subelements:
    - "{{ bind_views_play }}"
    - value.zones

- name: 'cleanup .jnl'
  shell: >
    rm -f /etc/bind/zones/{{ item.0.key }}/{{ item.1|first }}/*.jnl
  loop_control:
    label: '{{ item.0.key + "/" + item.1|first }}'
  with_subelements:
    - "{{ bind_views_play }}"
    - value.zones

- name: copy zone files
  template:
    src: db.j2
    dest: '/etc/bind/zones/{{ item.0.key }}/{{ item.1|first }}/db'
    owner: root
    group: root
    mode: 0644
  loop_control:
    label: '{{ item.0.key + "/" +  item.1|first }}'
  with_subelements:
    - "{{ bind_views_play }}"
    - value.zones
  register: zone
  notify: reload bind
  when: 'bind_role|lower == "master"'

- name: copy zone reverse files
  template:
    src: rev.j2
    dest: '/etc/bind/zones/{{ item.0.key }}/{{ item.1|first }}/rev'
    owner: root
    group: root
    mode: 0644
  loop_control:
    label: '{{ item.0.key + "/" +  item.1|first }}'
  with_subelements:
    - "{{ bind_views_play }}"
    - value.zones
  register: zone
  when: >
    (((item.1 | dict2items).0.value.reverse is defined and (item.1 | dict2items).0.value.reverse|lower == 'true')) and (bind_role|lower == "master")
  notify: reload bind

#TODO - add cleanup of unused zone
# - option to disable a zone in a view
